service: lbh-adult-social-care-builder

provider:
  name: aws
  runtime: nodejs14.x
  versionFunctions: false
  region: eu-west-2
  stage: ${opt:stage}

package:
  individually: true
  exclude:
    - ./**

functions:
  lbh-adult-social-care-builder:
    name: ${self:service}-${self:provider.stage}
    handler: lambda.handler
    timeout: 30
    package:
      include:
        - lambda.js
        - src/**
        - public/**
        - build/**
        - node_modules/**
    events:
      - http:
          path: api/{proxy+}
          method: ANY
      - http: ANY /
      - http: ANY /{proxy+}
    provisionedConcurrency: 5
    vpc:
      securityGroupIds: ${self:custom.securityGroups.${self:provider.stage}}
      subnetIds: ${self:custom.subnets.${self:provider.stage}}
    environment:
      AWS_KEY: ${ssm:/lbh-adult-social-care-builder/${self:provider.stage}/aws-key}
resources:
  Resources:
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.aliases.${self:provider.stage}}
          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.certificate-arn.${self:provider.stage}}
            MinimumProtocolVersion: TLSv1.2_2018
            SslSupportMethod: sni-only
          DefaultCacheBehavior:
            TargetOriginId: ${self:service}-${self:provider.stage}-custom-origin
            ViewerProtocolPolicy: 'redirect-to-https'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: all
          Enabled: true
          Origins:
            - Id: ${self:service}-${self:provider.stage}-custom-origin
              DomainName: ${self:custom.domain-name}
              OriginPath: /${self:provider.stage}
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
    LambdaSecurityGroup:
          Type: "AWS::EC2::SecurityGroup"
          Properties:
            GroupName: ${self:service}-${self:provider.stage}-lambda
            GroupDescription: Allow all outbound traffic, no inbound
            VpcId: vpc-03dcc1af2c848b965

custom:
  domain-name:
    Fn::Join:
       - '.'
       - - Ref: ApiGatewayRestApi
         - execute-api
         - eu-west-2
         - amazonaws.com
  aliases:
    staging: adult-social-care-builder-service-staging.hackney.gov.uk
    production: adult-social-care-builder-service.hackney.gov.uk
  certificate-arn:
    staging: arn:aws:acm:us-east-1:290114655000:certificate/1b48a5e9-70b5-4a14-ad3d-1eef9584dc5d
    production: arn:aws:acm:us-east-1:267112830674:certificate/dae4d0be-8f3a-4512-ba9c-fb80366e77f7
  securityGroups:
    staging: 
      - Ref: LambdaSecurityGroup
  subnets:
    staging:
      - subnet-0d4086ab96db46047
      - subnet-0f5eeab6b619d5e1a
  # development:
  #   securityGroupIds:
  #     - sg-
  #   subnetIds:
  #     - subnet-0d4086ab96db46047
  #     - subnet-0f5eeab6b619d5e1a
  # staging:
  #   securityGroupIds:
  #     - sg-0630857460fcc6b3e
  #   subnetIds:
  #     - subnet-0d4086ab96db46047
  #     - subnet-0f5eeab6b619d5e1a
  # production:
  #   securityGroupIds:
  #     - sg-
  #   subnetIds:
  #     - subnet-01d3657f97a243261
  #     - subnet-0b7b8fea07efabf34